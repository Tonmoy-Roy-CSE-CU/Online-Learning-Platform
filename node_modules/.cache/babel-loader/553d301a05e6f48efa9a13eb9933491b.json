{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\6th semester\\\\Web Engineering\\\\Project\\\\Let-s-Learn-master\\\\src\\\\components\\\\calender.jsx\";\nimport React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { stringify } from 'csv';\n\nclass Calender extends Component {\n  constructor() {\n    super();\n\n    this.getdata = d => {\n      const user = {\n        email: JSON.parse(localStorage.getItem(\"jwt\")).user.id,\n        date: d\n      };\n      console.log(user.date);\n      fetch(\"http://localhost:8082/getcalender\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          list: res.code\n        });\n      });\n    };\n\n    this.onChange = d => {\n      this.setState({\n        date: d\n      });\n      this.getdata(d.toLocaleDateString().toString());\n    };\n\n    this.addcalender = () => {\n      let ename = document.getElementById('evename').value;\n      let des = document.getElementById('descrip').value;\n      const ttuser = {\n        email: JSON.parse(localStorage.getItem(\"jwt\")).user.id,\n        date: this.state.date.toLocaleDateString().toString(),\n        event: ename,\n        description: des\n      }; // console.log(ttuser);\n\n      fetch(\"http://localhost:8082/addtocalender\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(ttuser)\n      }).then(res => res.json()).then(res => {\n        if (res.code === 0) {\n          alert(\"Item Not Added\");\n        } else {\n          alert(`ITEM ADDED SUCCESFULLY!!`);\n          console.log(ttuser.date);\n          this.getdata(ttuser.date);\n        }\n\n        console.log(\"done\");\n      });\n    };\n\n    this.myfunc = () => {\n      if (this.state.list) {\n        const doubled = this.state.list.map((number, index) => /*#__PURE__*/React.createElement(\"li\", {\n          key: number.sno,\n          className: \"list-group-item list-group-item-secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }\n        }, number.eventname), /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }\n        }, number.description), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }\n        })));\n        return doubled;\n      } else {\n        console.log(\"error\");\n      }\n    };\n\n    this.state = {\n      date: new Date(),\n      description: '',\n      eventname: '',\n      p: 0,\n      list: '',\n      alleventdates: ''\n    };\n  }\n\n  componentDidMount() {\n    const user = {\n      email: JSON.parse(localStorage.getItem(\"jwt\")).user.id\n    };\n    fetch(\"http://localhost:8082/getallcalender\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(res => res.json()).then(res => {\n      this.setState({\n        alleventdates: res.code\n      });\n      let x = document.getElementsByClassName('react-calendar__tile'); // console.log(x.length);\n      // for(var i=0;i<x.length;i++){\n      //   console.log(x[i].innerHTML)\n      // }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      onChange: this.onChange,\n      value: this.state.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-primary w-100 btn\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#exampleModal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"Add Event\"), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"list-group\",\n      style: {\n        height: \"250px\",\n        overflow: \"scroll\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      class: \"list-group-item active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, this.state.date.toLocaleDateString().toString()), this.myfunc())), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"exampleModal\",\n      tabindex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"modal-title\",\n      id: \"exampleModalLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, this.state.date.toLocaleDateString().toString()), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"evename\",\n      placeholder: \"Event Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"descrip\",\n      placeholder: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-secondary\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      onClick: () => this.addcalender(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, \"Save changes\"))))));\n  }\n\n}\n\nexport default Calender;\n/*<h2>You Have Event <i>{this.state.eventname} </i>on this Date </h2>*/","map":{"version":3,"sources":["D:/Documents/6th semester/Web Engineering/Project/Let-s-Learn-master/src/components/calender.jsx"],"names":["React","Component","Calendar","stringify","Calender","constructor","getdata","d","user","email","JSON","parse","localStorage","getItem","id","date","console","log","fetch","method","headers","body","then","res","json","setState","list","code","onChange","toLocaleDateString","toString","addcalender","ename","document","getElementById","value","des","ttuser","state","event","description","alert","myfunc","doubled","map","number","index","sno","eventname","Date","p","alleventdates","componentDidMount","x","getElementsByClassName","render","height","overflow","marginTop"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Calendar from 'react-calendar';\n import 'react-calendar/dist/Calendar.css';\nimport { stringify } from 'csv';\n\nclass Calender extends Component{\n   constructor()\n   {\n    super();\n\n    this.state = {\n        date : new Date(),\n        description:'',\n        eventname : '',\n        p:0,\n        list:'',\n        alleventdates:''\n    }\n   } \n   componentDidMount()\n   {\n    \n    const user={\n      email:JSON.parse(localStorage.getItem(\"jwt\")).user.id,\n    }\n    fetch(\"http://localhost:8082/getallcalender\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body:JSON.stringify(user)\n      })\n    .then(res=> res.json())\n      .then(res => {\n        this.setState({alleventdates:res.code})\n        let x=document.getElementsByClassName('react-calendar__tile');\n        // console.log(x.length);\n        // for(var i=0;i<x.length;i++){\n        //   console.log(x[i].innerHTML)\n        // }\n      })\n\n  }\n\n    getdata=(d)=>{\n        const user={\n            email:JSON.parse(localStorage.getItem(\"jwt\")).user.id,\n            date:d,\n          }\n    console.log(user.date);\n    fetch(\"http://localhost:8082/getcalender\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n      })\n    .then(res=> res.json())\n      .then(res => {\n        this.setState({list:res.code})\n      })\n    }\n// for upload and delete ceode\n//     updatedata=(d)=>{\n//       const user={\n//         sno:'',\n//         description:'',\n//         eventname:'',\n//         }\n//   console.log(user.date);\n//   fetch(\"http://localhost:8082/updatecalender\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify(user)\n//     })\n//   .then(res=> res.json())\n//     .then(res => {\n//       alert(\"data updated\");\n//     })\n//   }\n//   deleteddata=(d)=>{\n//     const user={\n//       sno:'',\n//       }\n// console.log(user.date);\n// fetch(\"http://localhost:8082/deletecalender\", {\n//   method: \"POST\",\n//   headers: {\n//     \"Content-Type\": \"application/json\"\n//   },\n//   body: JSON.stringify(user)\n//   })\n// .then(res=> res.json())\n//   .then(res => {\n//     alert(\"data updated\");\n//   })\n// }\n\n    onChange = (d) =>\n    { \n        \n      this.setState ( { date:d } )\n      this.getdata(d.toLocaleDateString().toString());\n    }    \n    addcalender = () => {\n        let ename=document.getElementById('evename').value;\n        let des=document.getElementById('descrip').value;\n        const ttuser={\n          email:JSON.parse(localStorage.getItem(\"jwt\")).user.id,\n          date:this.state.date.toLocaleDateString().toString(),\n          event:ename,\n          description:des\n        }\n        // console.log(ttuser);\n        fetch(\"http://localhost:8082/addtocalender\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(ttuser)\n      })\n        .then(res => res.json())\n        .then(res => {\n          if(res.code === 0)\n          {\n            alert(\"Item Not Added\");\n          }\n          else\n          {\n          alert(`ITEM ADDED SUCCESFULLY!!`);\n          console.log(ttuser.date);\n          this.getdata(ttuser.date);\n          }\n          console.log(\"done\");\n        }); \n      }\n      myfunc = () =>{\n        if(this.state.list)\n        {\n          const doubled = this.state.list.map((number,index) => \n          <li key={number.sno} className=\"list-group-item list-group-item-secondary\">\n            <p>{number.eventname}</p>\n            <small>{number.description}</small>\n            <hr/>\n          </li>\n        );\n          return doubled;\n  \n        }\n        else{\n          console.log(\"error\") \n        }\n      }\n    \n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 col-md-7\">\n                <Calendar  onChange = {this.onChange}  value = {this.state.date} />  \n                </div>\n                <div className=\"col-12 col-md-5\">\n                <button class=\"btn btn-primary w-100 btn\" data-toggle=\"modal\" data-target=\"#exampleModal\">Add Event</button>\n                <ul class=\"list-group\" style={{ height: \"250px\",overflow: \"scroll\" ,marginTop:\"10px\"}}>\n                <li class=\"list-group-item active\">{this.state.date.toLocaleDateString().toString()}</li>\n                {this.myfunc()}\n                </ul>\n                </div>\n                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">{this.state.date.toLocaleDateString().toString()}</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n      <input type=\"text\" className=\"form-control\" id=\"evename\" placeholder=\"Event Name\"/>\n      <input type=\"text\" className=\"form-control\" id=\"descrip\" placeholder=\"Description\"/>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.addcalender()}>Save changes</button>\n      </div>\n    </div>\n  </div>\n</div>\n            </div>\n        )\n    }\n\n}\nexport default Calender;\n/*<h2>You Have Event <i>{this.state.eventname} </i>on this Date </h2>*/"]},"metadata":{},"sourceType":"module"}