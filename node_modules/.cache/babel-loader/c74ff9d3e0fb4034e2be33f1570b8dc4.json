{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\6th semester\\\\Web Engineering\\\\Project\\\\Online Learning Platform\\\\frontend\\\\src\\\\components\\\\testDashboard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport default class TestDashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      test: []\n    };\n  }\n\n  componentDidMount() {\n    var url = new URL(window.location.href);\n    var params = new URLSearchParams(url.search);\n    fetch(` http://localhost:8082/mcq?testid=${params.get('code')}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n      var temp = [];\n      res.map(r => {\n        var obj = {\n          ques: \"\",\n          choices: []\n        };\n        obj.ques = r.question;\n        obj.choices.push(r.option1);\n        obj.choices.push(r.option2);\n        obj.choices.push(r.option3);\n        obj.choices.push(r.option4);\n        temp.push(obj);\n      });\n      this.setState({\n        test: temp\n      });\n      console.log(this.state.test);\n      this.props.test(this.state.test);\n    });\n  }\n\n  render() {\n    console.log(this.state.test);\n    var url = new URL(window.location.href);\n    var params = new URLSearchParams(url.search);\n    return this.state.test.map((t, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xl-12 mb-4 shadow-none p-2 mb-2 bg-light rounded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card border-left-primary  \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-xm font-weight-bold text-info mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }\n      }, index + 1, \".\", t.ques)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/mcq?name=${params.get('name')}&id=${params.get('id')}&code=${params.get('code')}`,\n        className: \"btn text-xm\",\n        onClick: () => this.props.selectMCQ(t, index),\n        style: {\n          backgroundColor: \"rgb(8, 169, 222)\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      }, \"Submit Answer\"))))));\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/Documents/6th semester/Web Engineering/Project/Online Learning Platform/frontend/src/components/testDashboard.js"],"names":["React","Component","Link","TestDashboard","constructor","state","test","componentDidMount","url","URL","window","location","href","params","URLSearchParams","search","fetch","get","method","headers","then","res","json","console","log","temp","map","r","obj","ques","choices","question","push","option1","option2","option3","option4","setState","props","render","t","index","selectMCQ","backgroundColor","color"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class TestDashboard extends Component{\n    constructor()\n    {\n        super();\n        this.state={\n          test:[]\n        }\n    }\n    componentDidMount(){\n      var url = new URL(window.location.href); \n        var params = new URLSearchParams(url.search);\n      fetch(` http://localhost:8082/mcq?testid=${params.get('code')}`, {\n      method: \"GET\",\n      headers:{  \"Content-Type\":\"application/json\" },\n  })\n.then(res => {return res.json();})\n.then(res => {\n      console.log(res);\n      var temp=[]\n      \n      res.map((r)=>{\n        var obj={ques:\"\",choices:[]}\n            obj.ques=r.question;\n            obj.choices.push(r.option1);\n            obj.choices.push(r.option2)\n            obj.choices.push(r.option3)\n            obj.choices.push(r.option4)\n            temp.push(obj);\n      })\n     this.setState({test:temp})\n     console.log(this.state.test)\n     this.props.test(this.state.test)\n})\n    }\n  \n    render()\n    {\n      console.log(this.state.test);\n      var url = new URL(window.location.href); \n        var params = new URLSearchParams(url.search);\n      return(\n       this.state.test.map((t,index)=>{\n           return  <div className=\"col-xl-12 mb-4 shadow-none p-2 mb-2 bg-light rounded\" >\n           <div className=\"card border-left-primary  \">\n             <div className=\"card-body\">\n               <div className=\"row no-gutters align-items-center\">\n                 <div className=\"col mr-2\">\n                   <div className=\"text-xm font-weight-bold text-info mb-1\">{index+1}.{t.ques}</div>\n                 </div>\n                 <div className=\"col-auto\">\n                   <Link to={`/mcq?name=${params.get('name')}&id=${params.get('id')}&code=${params.get('code')}`} className=\"btn text-xm\" onClick={()=>this.props.selectMCQ(t,index)} style={{backgroundColor:\"rgb(8, 169, 222)\",color:\"white\"}}>Submit Answer</Link>\n                 </div>\n               </div>\n             </div>\n           </div>\n         </div>\n       })\n      )}\n}"]},"metadata":{},"sourceType":"module"}